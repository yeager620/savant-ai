#!/bin/bash
# Unified Savant AI Daemon Manager
# Provides a single interface for all daemon operations following UNIX principles

set -e

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Usage information
show_usage() {
    cat << EOF
Savant AI Daemon Manager

USAGE:
    savant-daemon <COMMAND> [OPTIONS]

COMMANDS:
    start       Start all daemons (audio + video + multimodal analysis)
    stop        Stop all daemons gracefully
    restart     Restart all daemons (stop + start)
    status      Show status of all daemons and services
    monitor     Real-time monitoring dashboard (interactive)
    test        Test all systems and components
    logs        Show recent logs from all daemons
    health      Quick health check of all services

INDIVIDUAL DAEMON COMMANDS:
    start-audio     Start only audio daemon
    stop-audio      Stop only audio daemon
    start-video     Start only video daemon
    stop-video      Stop only video daemon

OPTIONS:
    --verbose, -v   Enable verbose output
    --help, -h      Show this help message

EXAMPLES:
    savant-daemon start           # Start all daemons
    savant-daemon status          # Check daemon status
    savant-daemon monitor         # Interactive monitoring
    savant-daemon test            # Test all systems
    savant-daemon logs --verbose  # Detailed logs

For more information, see: docs/guides/daemon-management.md
EOF
}

# Parse command line arguments
VERBOSE=false
COMMAND=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --verbose|-v)
            VERBOSE=true
            shift
            ;;
        --help|-h)
            show_usage
            exit 0
            ;;
        start|stop|restart|status|monitor|test|logs|health|start-audio|stop-audio|start-video|stop-video)
            COMMAND="$1"
            shift
            ;;
        *)
            echo -e "${RED}Error: Unknown option or command: $1${NC}"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Require a command
if [ -z "$COMMAND" ]; then
    echo -e "${RED}Error: No command specified${NC}"
    echo "Use --help for usage information"
    exit 1
fi

# Utility functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Check if daemon is running
is_daemon_running() {
    local daemon_name="$1"
    case "$daemon_name" in
        "audio")
            "$PROJECT_ROOT/sav" status &>/dev/null
            ;;
        "video")
            "$PROJECT_ROOT/sav-video" status &>/dev/null
            ;;
        "ollama")
            curl -s http://localhost:11434/api/tags &>/dev/null
            ;;
        *)
            return 1
            ;;
    esac
}

# Execute commands
case "$COMMAND" in
    start)
        log_info "Starting all Savant AI daemons..."
        if [ "$VERBOSE" = true ]; then
            "$PROJECT_ROOT/scripts/daemon-management/start_all_daemons.sh"
        else
            "$PROJECT_ROOT/scripts/daemon-management/start_all_daemons.sh" 2>/dev/null
        fi
        log_success "All daemons started"
        ;;
        
    stop)
        log_info "Stopping all Savant AI daemons..."
        if [ "$VERBOSE" = true ]; then
            "$PROJECT_ROOT/scripts/daemon-management/stop_all_daemons.sh"
        else
            "$PROJECT_ROOT/scripts/daemon-management/stop_all_daemons.sh" 2>/dev/null
        fi
        log_success "All daemons stopped"
        ;;
        
    restart)
        log_info "Restarting all Savant AI daemons..."
        if [ "$VERBOSE" = true ]; then
            "$PROJECT_ROOT/scripts/daemon-management/restart_daemons.sh"
        else
            "$PROJECT_ROOT/scripts/daemon-management/restart_daemons.sh" 2>/dev/null
        fi
        log_success "All daemons restarted"
        ;;
        
    status)
        echo -e "${BLUE}Savant AI Daemon Status${NC}"
        echo "======================="
        
        # Check audio daemon
        if is_daemon_running "audio"; then
            echo -e "ðŸŸ¢ Audio Daemon: ${GREEN}Running${NC}"
        else
            echo -e "ðŸ”´ Audio Daemon: ${RED}Stopped${NC}"
        fi
        
        # Check video daemon
        if is_daemon_running "video"; then
            echo -e "ðŸŸ¢ Video Daemon: ${GREEN}Running${NC}"
        else
            echo -e "ðŸ”´ Video Daemon: ${RED}Stopped${NC}"
        fi
        
        # Check Ollama server
        if is_daemon_running "ollama"; then
            echo -e "ðŸŸ¢ Ollama Server: ${GREEN}Running${NC}"
        else
            echo -e "ðŸ”´ Ollama Server: ${RED}Stopped${NC}"
        fi
        
        # Show system resources if verbose
        if [ "$VERBOSE" = true ]; then
            echo ""
            echo -e "${BLUE}System Resources:${NC}"
            top -l 1 | grep "CPU usage" | head -1 || echo "CPU: N/A"
            top -l 1 | grep "PhysMem" | head -1 || echo "Memory: N/A"
            df -h / | tail -1 | awk '{print "Disk: " $5 " used"}' || echo "Disk: N/A"
        fi
        ;;
        
    monitor)
        log_info "Starting real-time monitoring dashboard..."
        exec "$PROJECT_ROOT/scripts/daemon-management/monitor_daemons.sh"
        ;;
        
    test)
        log_info "Testing all Savant AI systems..."
        if [ "$VERBOSE" = true ]; then
            "$PROJECT_ROOT/scripts/daemon-management/test_all_systems.sh"
        else
            "$PROJECT_ROOT/scripts/daemon-management/test_all_systems.sh" 2>/dev/null
        fi
        ;;
        
    logs)
        echo -e "${BLUE}Recent Daemon Logs${NC}"
        echo "=================="
        
        echo -e "\n${BLUE}Audio Daemon Logs:${NC}"
        if [ -f "$PROJECT_ROOT/data/daemon-logs/savant-audio-daemon.log" ]; then
            if [ "$VERBOSE" = true ]; then
                tail -10 "$PROJECT_ROOT/data/daemon-logs/savant-audio-daemon.log"
            else
                tail -5 "$PROJECT_ROOT/data/daemon-logs/savant-audio-daemon.log"
            fi
        else
            echo "No audio logs available"
        fi
        
        echo -e "\n${BLUE}Video Daemon Logs:${NC}"
        if [ -f "$HOME/.config/savant-ai/daemon-logs/video-daemon.log" ]; then
            if [ "$VERBOSE" = true ]; then
                tail -10 "$HOME/.config/savant-ai/daemon-logs/video-daemon.log"
            else
                tail -5 "$HOME/.config/savant-ai/daemon-logs/video-daemon.log"
            fi
        else
            echo "No video logs available"
        fi
        ;;
        
    health)
        echo -e "${BLUE}Quick Health Check${NC}"
        echo "=================="
        
        # Check dependencies
        echo -n "Checking Ollama... "
        if command -v ollama &> /dev/null; then
            echo -e "${GREEN}âœ“${NC}"
        else
            echo -e "${RED}âœ— (not installed)${NC}"
        fi
        
        echo -n "Checking Tesseract... "
        if command -v tesseract &> /dev/null; then
            echo -e "${GREEN}âœ“${NC}"
        else
            echo -e "${RED}âœ— (not installed)${NC}"
        fi
        
        # Check services
        echo -n "Checking Ollama server... "
        if is_daemon_running "ollama"; then
            echo -e "${GREEN}âœ“${NC}"
        else
            echo -e "${RED}âœ— (not running)${NC}"
        fi
        
        echo -n "Checking audio daemon... "
        if is_daemon_running "audio"; then
            echo -e "${GREEN}âœ“${NC}"
        else
            echo -e "${RED}âœ— (not running)${NC}"
        fi
        
        echo -n "Checking video daemon... "
        if is_daemon_running "video"; then
            echo -e "${GREEN}âœ“${NC}"
        else
            echo -e "${RED}âœ— (not running)${NC}"
        fi
        ;;
        
    start-audio)
        log_info "Starting audio daemon..."
        "$PROJECT_ROOT/sav" start
        log_success "Audio daemon started"
        ;;
        
    stop-audio)
        log_info "Stopping audio daemon..."
        "$PROJECT_ROOT/sav" stop
        log_success "Audio daemon stopped"
        ;;
        
    start-video)
        log_info "Starting video daemon..."
        "$PROJECT_ROOT/sav-video" start
        log_success "Video daemon started"
        ;;
        
    stop-video)
        log_info "Stopping video daemon..."
        "$PROJECT_ROOT/sav-video" stop
        log_success "Video daemon stopped"
        ;;
        
    *)
        log_error "Unknown command: $COMMAND"
        echo "Use --help for usage information"
        exit 1
        ;;
esac